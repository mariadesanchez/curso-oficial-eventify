{
  "name": "eventify-curso",
  "nodes": [
    {
      "parameters": {
        "updates": ["message"],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [-1260, -460],
      "id": "aa765311-3e2d-4964-9de8-ff9bd377588d",
      "name": "Telegram Trigger",
      "webhookId": "0900e1e7-830a-41e6-9bcc-ddde2dd3ebda",
      "credentials": {
        "telegramApi": {
          "id": "vnfFOUt6h9LmnBOe",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "daded238-5731-4e87-95fc-2bc00a4cb643",
              "leftValue": "={{ $json.message.voice }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-980, -460],
      "id": "b27deff3-40a1-402f-ab73-0f6d74f13194",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "17a79443-6d3f-4680-ba4d-467d724c759b",
              "name": "mensaje",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-540, -300],
      "id": "cacc406b-bf54-4970-a501-1e2f85f29fca",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [-760, -560],
      "id": "6aa5a67f-47d5-4dad-bccb-13058f5d7b1e",
      "name": "Telegram",
      "webhookId": "b136f49d-744c-4602-9212-12b177589477",
      "credentials": {
        "telegramApi": {
          "id": "vnfFOUt6h9LmnBOe",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "lenguaje",
              "value": "es"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-540, -560],
      "id": "27177ddd-ae8e-4cef-8c2f-8cfa8c904bf4",
      "name": "HTTP Request",
      "credentials": {
        "openAiApi": {
          "id": "SXXnDE0SiKzMwl9N",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "91c8dee1-862b-437b-95fa-753915403702",
              "name": "mensaje",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-320, -560],
      "id": "03ff981d-4d78-4450-9d36-fae8b8c2d3ad",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5ce23b3c-a3ec-4d78-a52c-51aca5729ed6",
              "name": "mensaje",
              "value": "={{ $json.mensaje }}",
              "type": "string"
            },
            {
              "id": "e07794c7-c57e-4ecf-9e65-127fa9dc3dba",
              "name": "nombre",
              "value": "={{ $('If').item.json.message.chat.first_name }}",
              "type": "string"
            },
            {
              "id": "ccdbc5c9-f960-40c6-b5bc-b268f18496aa",
              "name": "apellido",
              "value": "={{ $('If').item.json.message.chat.last_name }}",
              "type": "string"
            },
            {
              "id": "562ff308-8757-4265-bb18-05c8c3f868ca",
              "name": "chat_id",
              "value": "={{ $('If').item.json.message.chat.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [80, -480],
      "id": "465f44c9-ebbd-4706-8cf4-dd26a6502108",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensaje }}",
        "options": {
          "systemMessage": "=Extrae la siguiente información para un evento de calendario del siguiente mensaje:\n\nTítulo del evento\nDescripción (opcional)\nFecha y hora de inicio\nFecha y hora de finalización\n\nREGLAS IMPORTANTES PARA FECHAS:\n\nSIEMPRE usa el año actual 2025 para todas las fechas, a menos que el usuario especifique explícitamente otro año.\nSi el usuario menciona \"mañana\", \"pasado mañana\", \"próximo lunes\", etc., calcula la fecha correcta basada en la fecha actual.\nSi el usuario solo menciona un día de la semana (ej. \"el lunes\"), asume que se refiere al próximo día de la semana desde hoy.\nSi el usuario menciona un mes sin año (ej. \"5 de abril\"), asume que es del año actual.\nNunca uses años anteriores al actual.\nSi no hay información clara sobre la hora de finalización, asume que el evento dura 1 hora después de la hora de inicio.\nSi no hay información clara sobre la hora, asume que es a las 9:00 AM.\nDebes entender del mensaje que parte es el titulo y que parte describe la tarea\n\nFORMATO EXACTO REQUERIDO:\n{\n  \"titulo\": \"Título extraído del evento\",\n  \"description\": \"Descripción extraída (o vacía si no hay)\",\n  \"start_time\": \"YYYY-MM-DDTHH:MM:SS\",\n  \"end_time\": \"YYYY-MM-DDTHH:MM:SS\"\n}\n\nVERIFICA SIEMPRE que las fechas generadas:\n\nTengan el formato ISO8601 correcto (YYYY-MM-DDTHH:MM:SS)\nUsen el año actual a menos que se especifique otro\nLa fecha de finalización sea posterior a la de inicio\nNunca estén en el pasado\n\nSi no logras entender algo, o si no te pasan el dia o la hora de inicio , tienes que devolver en lugar de ese json, otro json que tenga este formato: {errorMessage: \"me faltan datos para agendar el evento\"}\nEsos 2 campos son totalmente obligatorios"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [300, -480],
      "id": "d48e75a5-ffda-47ec-8aa3-b690c1ced340",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [240, -240],
      "id": "2604525c-ab07-42ec-b6a8-7f383fb536d1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "SXXnDE0SiKzMwl9N",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields2').item.json.chat_id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [400, -260],
      "id": "b303b720-66ee-46ac-b78f-d950edc23d05",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d383d1b-0e81-429b-8601-f96d163a117f",
              "leftValue": "={{ $json.output }}",
              "rightValue": "errorMessage",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [660, -480],
      "id": "bb530756-6a30-4e2e-bb89-23ba7039927b",
      "name": "If1"
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields2').item.json.chat_id }}",
        "text": "Disculpa, me falta informacion para guardar el evento",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [1040, -720],
      "id": "d9360a3f-feab-4fde-a853-2024b72dbb3c",
      "name": "Telegram1",
      "webhookId": "361fb4e2-f4e6-4b1d-9a55-2892b55bc602",
      "credentials": {
        "telegramApi": {
          "id": "vnfFOUt6h9LmnBOe",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "parte 1\n",
        "height": 900,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [-1360, -780],
      "typeVersion": 1,
      "id": "3af7a4ca-de7a-4920-9dbd-6bfa76a4a0ab",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "parte 2\n",
        "height": 900,
        "width": 1380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [60, -800],
      "typeVersion": 1,
      "id": "491119d7-688d-4f11-afdd-d424a9fb1537",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [1620, -480],
      "id": "6b1ad5f6-05be-4aa9-a815-b7ef47fab425",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [1580, -240],
      "id": "a6f98ae4-1607-4217-aa27-e5b301996096",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "SXXnDE0SiKzMwl9N",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "prompt": "Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [980, 300],
      "id": "427bc38a-1a37-4777-b3d3-6afbf4326a93",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [980, 540],
      "id": "6fe88bfa-884e-4b5c-a8af-43aed5433fe9",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "SXXnDE0SiKzMwl9N",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"response\": {\n    \"titulo\": \"titulo\",\n  \"description\": \"la descripcion\",\n    \"start_date\": \"fecha inicio\",\n    \"end_time\": \"fecha fin\"\n}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [1160, 520],
      "id": "69b2e9a0-0596-49ad-9bec-0eda6b73d984",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"response\": {\n    \"titulo\": \"titulo \",\n  \"description\": \"la descripcion\",\n    \"start_time\": \"fecha inicio\",\n    \"end_time\": \"fecha fin\"\n}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [1800, -240],
      "id": "1ae2cfc6-c917-498b-98d8-3bbda44bd7ba",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hpzlouifetkfdiizteov.supabase.co/auth/v1/token?grant_type=password",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhwemxvdWlmZXRrZmRpaXp0ZW92Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNzY1OTgsImV4cCI6MjA1Njg1MjU5OH0.EyQfVibQRylHyPuLG6867neoECP8xARzPHcx4qoQhw4"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"email\": \"jorgeduje4@gmail.com\",\n    \"password\": \"Jorge1234\"\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1980, -480],
      "id": "08546098-415d-4751-9a77-43f478708c2f",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "let response = $('Basic LLM Chain').first().json.output.response\nconst accessToken = $input.first().json.access_token\nconst userId = $input.first().json.user.id\n\nreturn {item: response, accessToken, userId}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [2200, -480],
      "id": "82a7e613-69ce-4295-9558-1bde699f48ac",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hpzlouifetkfdiizteov.supabase.co/rest/v1/events",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhwemxvdWlmZXRrZmRpaXp0ZW92Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNzY1OTgsImV4cCI6MjA1Njg1MjU5OH0.EyQfVibQRylHyPuLG6867neoECP8xARzPHcx4qoQhw4"
            },
            {
              "name": "Authorization",
              "value": "=Bearer  {{ $json.accessToken }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.item.titulo }}\",\n  \"description\": \"{{ $json.item.description }}\",\n  \"start_time\": \"{{ $json.item.start_time }}\",\n  \"end_time\": \"{{ $json.item.end_time }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2420, -480],
      "id": "2850615c-bb14-49d3-ac3c-1f329dcca6cd",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "chatId": "={{ $('If').item.json.message.chat.id }}",
        "text": "Recibido y agendado en el calendario",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [2640, -480],
      "id": "e9792179-754f-4569-8448-625015fb4a15",
      "name": "Telegram2",
      "webhookId": "18002a70-211f-4eb2-81a1-c3b7d4477a4e",
      "credentials": {
        "telegramApi": {
          "id": "vnfFOUt6h9LmnBOe",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "Grabado en la DB",
        "height": 700,
        "width": 1640,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [1480, -660],
      "typeVersion": 1,
      "id": "14a92477-fd7a-4ac6-9411-412c400d352a",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [[]]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ea809d00-8a32-4032-b6c5-2952d90be431",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8a7e1b62946733056c9f32b1063bcc9adee3fb1cb6ea2c9120810fd36dfa0aeb"
  },
  "id": "tI26JcJzIm812JyI",
  "tags": []
}
